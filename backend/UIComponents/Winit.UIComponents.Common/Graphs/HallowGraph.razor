@using Microsoft.JSInterop
@using Winit.UIModels.Common.GraphModels
@using Newtonsoft.Json
@inject IJSRuntime jsRunTime

<div class="cls_canvas_outline" >
    <canvas id="myDoughNutGraphHallow"></canvas>
</div>



@code {
    public HallowGraphModel hallowGraphModel = new HallowGraphModel
        {
            TotalTarget = 3000,
            CurrentProgress = 1632
        };

    private string backgroundColor = "#FFFFFF";

    bool isPageRendered { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // await RenderChart();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isPageRendered = true;
            await RenderChart();
            // Call the JavaScript function to render the chart
        }
    }

    public async Task RenderChart()
    {
        if (isPageRendered)
        {
            var jsonData = JsonConvert.SerializeObject(hallowGraphModel);
            await jsRunTime.InvokeVoidAsync("PieGraphRenderHallow", "myDoughNutGraphHallow", jsonData, backgroundColor);
        }
    }
}
