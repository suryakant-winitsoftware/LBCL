@page "/Payment"
@using Winit.Shared.CommonUtilities.Common
@using Winit.UIComponents.Common.CustomControls
@inject Winit.Modules.CollectionModule.BL.Interfaces.ICreatePaymentViewModel _createPaymentAppViewModel
@inject NavigationManager _NavigationManager
@inject IJSRuntime JSRuntime;
@inherits WINITMobile.Pages.Base.BaseComponentBase


@if (ShowPopUp)
{
    <div>
        <CollectAmountPopUp Closebtn="Close" EnteredAmount="((e) => OnAccountAmount(e))"></CollectAmountPopUp>
    </div>
}

@if (IsShowMultiCurrency)
{
    <MultiCurrencyPopUp Closebtn="CloseMultiCurrency"></MultiCurrencyPopUp>
}

@if (IsShowPendingRecords)
{
    <PendingRecordsPopUp PendingRecords="ShowPendingRecordsPopUpData" CloseBtn="ClosePendingRecords"></PendingRecordsPopUp>
}

<div style="background-color:white;">
    <div style="margin-bottom: 5px;"></div>
    <div class="header">
        <h1 class="headr_cls">
            <b>@Localizer["ar"]</b>@Localizer["collection"]
        </h1>
        <div style="margin-left: 35px;">
            <button class="cls_wastage_btn" style="padding:4px 10px;font-weight: bold;" @onclick="SyncData">@Localizer["refresh"]</button>
            <button class="cls_wastage_btn" style="padding:4px 8px;margin-left: 6px;background-color: #19298B;color: white;font-weight: bold;" @onclick="ShowOnAccountPopUp">
                @Localizer["on_account"]
            </button>
        </div>
    </div>
    <div style="margin-bottom: 10px;"></div>
    <div class="container">
        <div class="row">
            <div class="card d-flex flex-row">
                <div class="card-text col-5 card-content" style="padding: 5px;">
                    @Localizer["paying_amount"]:
                    <input type="number" @bind="Textbox" @oninput="(e) => OnChangeTextboxDiscrepency(e.Value.ToString())" class="underline-textbox col-4 mt-2">
                </div>
                <div class="card-text col-5 card-content d-flex flex-column" style="padding: 5px;margin-left: -5px;">
                    @Localizer["invoice_amount"]:
                    <label class="mt-2">@InvoiceAmount</label>
                </div>
                <div class="card-text col-3 card-content d-flex flex-column" style="padding: 4px;margin-left: -15px;">
                    @Localizer["discrepency"]:
                    <label class="mt-2">@Discrepency</label>
                </div>
            </div>
        </div>
    </div>
    <div style="margin-bottom: 10px;"></div>

    <div class="search-card">
        <div class="cls_serch_nn_left" style="background-color: white;width: 98%;padding: 8px;">
            <div class="cls_search_desk">
                <WinitTextBox Placeholder=@Localizer["search_by_customer_name_/code"]
                              MaxLength="200" DebounceInterval="500" OnDebounceIntervalElapsed="WinitTextBox_OnSearch"
                              KeyboardType="Winit.Shared.Models.Enums.InputType.Text"
                              Value="" IsForSearch="true" />
            </div>
        </div>
    </div>
    <div style="margin-bottom: 10px;"></div>
    <div class="div1">
        <table class="table" width="100%" style="table-layout: fixed;">
            <thead>
                <tr class="gridheadernew11">
                    <th style="text-align: left; width:5%;">
                        <input type="checkbox" id="CheckAll" checked="@GetCheckboxState("CheckAll")" @onchange="@(() => ToggleSelection(null,"CheckAll"))" />
                        <label for="CheckAll" style="margin-top: 15px;"></label>
                    </th>
                    <th style="text-align: left; width: 14%;">
                        <span>Invoice NO</span>
                    </th>
                    <th style="width:10%">
                        <div>
                            <span>Invoices Amt</span>
                        </div>
                    </th>

                    <th style="width: 10%">
                        <div>
                            <span>Allocate Amt</span>
                        </div>
                    </th>
                    <th style="width: 10%">
                        <div>
                            <span>Balance Amt</span>
                        </div>
                    </th>
                    <th style="width: 10%">
                        <div>
                            <span>Collection</span>
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody class="cls_new_grid_style">
                @if (_InvoicesList.Count() != 0)
                {
                    @foreach (var list in _InvoicesList)
                    {
                        <tr>
                            <td style="text-align: left;">
                                <input type="checkbox" id="@list.UID" checked="@GetCheckboxState(list.UID)" @onchange="() => ToggleSelection(list)" />
                                <label for="@list.UID"></label>
                            </td>
                            <td style="text-align:left;">
                                <div class="cls_cred_heading" @onclick="() => ShowPendingRecords(list)">
                                    <h3>@list.ReferenceNumber</h3>
                                    <p>@CommonFunctions.GetDateTimeInFormat(list.TransactionDate)</p>
                                    <p>@CommonFunctions.GetDateTimeInFormat(list.DueDate)</p>
                                </div>
                            </td>
                            <td><span>@list.Amount</span></td>
                            <td><span>@list.UnSettledAmount</span></td>
                            <td><span>@list.BalanceAmount</span></td>
                            <td>
                                <span>
                                    @if (list.IsCheckBox)
                                    {
                                        <input type="number" id="@list.UID" @bind="@list.PayingAmount" @oninput="(e) => OnChangeTextbox(list,e.Value.ToString())" class="cls_input_border">
                                    }
                                    else
                                    {
                                        <input type="number" id="@list.UID" @bind="@list.PayingAmount" @oninput="(e) => OnChangeTextbox(list,e.Value.ToString())" class="cls_input_border" disabled>
                                    }
                                </span>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <div style="margin-bottom: 3px;"></div>
                    <div class="container">
                        <div class="row">
                            <div class="card">
                                <div class="card-title" style="color:red;margin-left: 100px;margin-top: 22px;">
                                    @Localizer["no_records_available"]
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </tbody>
        </table>
    </div>

    <div class="container">
        <div class="cls_proceed">
            <button class="cls_continue_btn" style="border-radius: 15px;padding: 10px;" @onclick="Redirect"> @Localizer["continue"]</button>
        </div>
    </div>
</div>


<style>

    body {
        margin: 0;
        padding: 0;
        overflow-y: auto;
    }

    .invoice-container {
        display: flex;
        flex-direction: column;
        height: 100vh; /* Set full viewport height */
    }

    garbage {
        position: fixed;
        bottom: 0;
        /* Optional: Add some left/right margins for centering */
        left: 50%;
        transform: translateX(-50%);
    }

    .headr_cls {
        margin-left: 15px;
        font-size: 20px;
        margin-top: 5px;
    }

    .header {
        display: flex;
        align-items: center;
        padding: 5px 0px;
        background-color: white;
        margin-top: -4px;
    }

        .header h1 {
            font-weight: normal;
        }

            .header h1 b {
                font-weight: bold;
            }

    .records-container {
        width: 100%;
        margin-bottom: 300px; /* Adjust as needed */
    }

    input:focus {
        border: none; /* Remove border on focus */
        box-shadow: none;
    }

    .img {
        /*  margin-left: -40px; */
        height: 20px;
        width: 20px;
        /*  margin-top: 10px; */
    }

    input {
        border: none;
        outline: none; /* Removes the default focus outline */
    }

    .search-icon {
        color: #fff;
        background-color: #fff;
        padding: 10px;
        border-radius: 0 5px 5px 0;
        cursor: pointer;
    }

    .tick {
        display: none;
    }

    .underline-textbox, .underline-textbox-copy {
        border: none;
        border-bottom: 1px solid black; /* You can adjust the color and thickness of the underline */
        outline: none; /* Remove the default outline styles */
        background: transparent; /* Make the background transparent */
        width: 100px;
    }

    .underline-textbox-copy {
        width: 50px;
        font-weight: 500;
    }

    .content {
        display: none;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 0 0 5px 5px;
    }

    .search-card {
        display: flex;
        border: 1px solid #ddd;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .tab:target {
        background-color: #ccc;
    }

        .tab:target + .content {
            display: block;
        }

    .card {
        border: 1px solid #ddd;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        height: 50px;
    }

    .card-copy {
        border: 1px solid #ddd;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        height: 40px;
    }

    /* Additional styles for card content, title, etc. */
    .card-title {
        font-size: 12px;
        font-weight: bold;
        margin-bottom: 4px;
    }

    .card-content {
        font-size: 13px;
        color: #555;
    }

    .card-content-copy {
        font-size: 11px;
        color: white;
    }

    .round {
        position: relative;
    }

        .round label {
            background-color: #fff;
            border: 1px solid black;
            border-radius: 20%;
            cursor: pointer;
            height: 15px;
            left: -1px;
            position: absolute;
            top: 0;
            width: 15px;
            margin-top: 10px;
            margin-left: -10px;
        }

            .round label:after {
                border: 2px solid #fff;
                border-top: none;
                border-right: none;
                content: "";
                height: 5px;
                left: 2px;
                opacity: 0;
                position: absolute;
                top: 3px;
                transform: rotate(-44deg);
                width: 10px;
            }

        .round input[type="checkbox"] {
            visibility: hidden;
        }

            .round input[type="checkbox"]:checked + label {
                background-color: blue;
                border-color: blue;
            }

                .round input[type="checkbox"]:checked + label:after {
                    opacity: 1;
                }
</style>
